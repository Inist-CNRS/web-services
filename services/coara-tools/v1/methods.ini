# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.summary = Extraction de méthodes pour l'instance Lodex COARA
post.description = Extrait des méthodes de plans d'actions européens. Ne pas utiliser en dehors de ce projet.
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.tags.0 = coara-tools
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result
post.parameters.1.in = query
post.parameters.1.name = threshold
post.parameters.1.schema.type = number
post.parameters.1.description = seuil d'acceptation de la réponse. Ne pas modifier sauf indication explicite.

# Open API examples
post.requestBody.content.application/json.example.0.value = Reforming Research Assessment at Strathclyde: A five-year CoARA action plan Background Strathclyde is committed to enabling research activity that adheres to the highest standards of research integrity, underpinned by a positive research culture. Following seminal initiatives such as the San Francisco Declaration on Research Assessment (DORA, 2013), the Leiden Manifesto (2015) and the Metric Tide Report (2016), there is now broad agreement amongst the research community that reform of research assessment is required to promote sustainable research quality and strengthen research cultures. M5 Receiving feedback from our member associations on the contents of the draft guidelines, with the revised guidelines sent out to consultation for official confirmation by all member associations.
post.responses.default.content.application/json.example.0.value.0 = M5 Receiving feedback from our member associations on the contents of the draft guidelines, with the revised guidelines sent out to consultation for official confirmation by all member associations.#'

[use]
plugin = @ezs/spawn
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 10

[expand/exec]
# command should be executable !
command = ./v1/methods.py
args = fix('-p')
args = env('threshold', "80")


[dump]
indent = env('indent', false)
