# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-tagger
post.summary = Extraction des DOI d'un texte.
post.description = Retourne la liste des DOI d'un texte
post.tags.0 = doi-tools
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.requestBody.required = true
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Retourne la liste des DOI trouvés dans le texte. 
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean

post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = This text contains two DOI : 10.1056/nejmoa1200303 and 10.1016/b978-0-323-90638-8.00002-3
post.requestBody.content.application/json.example.1.id = 2
post.requestBody.content.application/json.example.1.value = Please see https://doi.org/10.1016\/b978-0-323-90638-8.00002-3
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value.0 = 10.1056/nejmoa1200303
post.responses.default.content.application/json.example.0.value.1 = 10.1016/b978-0-323-90638-8.00002-3
post.responses.default.content.application/json.example.1.id = 2
post.responses.default.content.application/json.example.1.value.0 = 10.1016\/b978-0-323-90638-8.00002-3


[use]
plugin = @ezs/spawn
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 10

[expand/exec]
# command should be executable !
command = ./v1/tagger.py

[dump]
indent = env('indent', false)
