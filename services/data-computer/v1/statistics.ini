# Entrypoint output format
mimeType = application/json

# OpenAPI Documentation - JSON format (dot notation)
post.operationId = post-v1-statistics
post.summary = Chargement et analyse d'un fichier corpus
post.description = Le corpus est analysé et pour chaque valeur envoyée (champ `value`), le service retourne quelques statistiques.
post.tags.0 = data-computer
post.requestBody.content.application/x-gzip.schema.type = string
post.requestBody.content.application/x-gzip.schema.format = binary
post.requestBody.content.application/x-tar.schema.type = string
post.requestBody.content.application/x-tar.schema.format = binary
post.requestBody.required = true
post.responses.default.description = Informations permettant de récupérer les données le moment venu
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.1.description = URL pour signaler que le traitement est terminé
post.parameters.1.in = header
post.parameters.1.name = X-Webhook-Success
post.parameters.1.schema.type = string
post.parameters.1.schema.format = uri
post.parameters.1.required = false
post.parameters.2.description = URL pour signaler que le traitement a échoué
post.parameters.2.in = header
post.parameters.2.name = X-Webhook-Failure
post.parameters.2.schema.type = string
post.parameters.2.schema.format = uri
post.parameters.2.required = false

[use]
plugin = analytics

[env]
path = generator
value = statistics

# Step 1 (générique): Charger le fichier corpus
[delegate]
file = charger.cfg

# Step 2 (générique): Traiter de manière asynchrone les items reçus
[fork]
standalone = true
logger = logger.cfg

# Step 2.0 (optionnel): Accélére le détachement du fork si l'enrichissement est lent
[fork/delegate]
file = buffer.cfg

# Step 2.1 (spécifique): Lancer un calcul sur tous les items reçus
[fork/delegate]

# Step 2.1.1 (spécifique): S'assurer d'avoir des tableaux de tableaux
[fork/delegate/statistics]
path = value

# Step 2.1.2 (spécifique): Créer des tableaux de paires des segments (ou Bigramme)
[fork/delegate/debug]

[fork/delegate/assign]
path = _statistics.value.input
value = get('value')

[fork/delegate/replace]
path = id
value = get('id')

path = value
value = get('_statistics.value')

# Step 2.2 (générique): Enregister le résulat et signaler que le traitment est fini
[fork/delegate]
file = recorder.cfg

# Step 3 : Renvoyer immédiatement un seul élément indiquant comment récupérer le résulat quand il sera prêt
[delegate]
file = recipient.cfg

