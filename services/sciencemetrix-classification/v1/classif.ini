# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.summary = Classification en domaines scientifiques Science-Metrix
post.description = Le web service classe automatiquement des documents scientifiques en anglais dans le troisième niveau de la classification Science-Metrix à partir de leur résumé. Attention : si les résumés sont trop courts, le risque d'erreur est augmenté.
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.tags.0 = sciencemetrix-classification
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result

# Examples

post.requestBody.content.application/json.example.0.id: "1"
post.requestBody.content.application/json.example.0.value: Anatomical comparison between compression wood and opposite wood in a branch of korean pine pinus koraiensis compression wood and opposite wood formed in the branch of korean pine pinus koraiensis s et z is described and compared in qualitative and quantitative anatomical aspects
post.requestBody.content.application/json.example.1.id: "2"
post.requestBody.content.application/json.example.1.value: This asbtract is too short.
post.responses.default.content.application/json.example.0.id: "1"
post.responses.default.content.application/json.example.0.value.classif.0: Applied Sciences
post.responses.default.content.application/json.example.0.value.classif.1: Agriculture, Fisheries & Forestry
post.responses.default.content.application/json.example.0.value.classif.2: Forestry
post.responses.default.content.application/json.example.1.id: "2"
post.responses.default.content.application/json.example.1.value.classif.0: ""
post.responses.default.content.application/json.example.1.value.classif.1: ""
post.responses.default.content.application/json.example.1.value.classif.2: ""


[use]
plugin = @ezs/spawn
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 100

[expand/exec]
# command should be executable !
command = ./v1/classif.py

[dump]
indent = env('indent', false)
