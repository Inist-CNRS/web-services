# openAPI Documentation - JSON format (dot notation)
post.description = Transforme une liste de termes francais en un dictionnaire morpho-syntaxique complet au format SPACY   en json
post.responses.default.description = Renvoie un tsv ou chaque ligne se compose de `ID` `LABEL` `POS` `LEMMA` au format json
post.responses.default.content.text/csv.schema.$ref = #/components/schemas/anyValue
post.requestBody.required = true
post.requestBody.content.text/csv.schema.$ref = #/components/schemas/anyValue
post.parameters.0.in = query
post.parameters.0.name = input
post.parameters.0.schema.type = string
post.parameters.0.description =  format de l'entr√©e [terms] ou [text]
post.parameters.0.schema.enum = [terms, text]
mimeType = text/tab-separated-values
post.summary = Produit un dictionnaire morpho-syntaxique pour loterre

mimeType = text/csv
post.requestBody.content.application/json.example.0.id = http://data.loterre.fr/ark:/67375/P66#xl_en_696ab94f
post.requestBody.content.application/json.example.0.value = material entities
post.responses.default.content.application/json.example.0.id = http://data.loterre.fr/ark:/67375/P66#xl_en_696ab94f
post.responses.default.content.application/json.example.0.value = "[{""id"": 0, ""start"": 0, ""end"": 8, ""tag"": ""NN"", ""pos"": ""NOUN"", ""morph"": ""Number=Sing"", ""lemma"": ""material""}, {""id"": 1, ""start"": 9, ""end"": 17, ""tag"": ""NNS"", ""pos"": ""NOUN"", ""morph"": ""Number=Plur"", ""lemma"": ""entity""}]"

[use]
plugin = basics
plugin = analytics
plugin = spawn


[CSVParse]
separator = fix('\t')
quote = fix('\b')

[CSVObject]

[OBJFlatten]
separator = fix('.')
reverse = true
safe = true

[expand]
path = env('path', 'value')
cache = boost

[expand/exec]
#command should be executable !
command = terms_tools
args = POStagger
args = fix('-lang')
args = fix('en')
args = fix('-f')
args = env('input')
args = fix('-o')
args = env('output')
args = fix('json')
args = fix('-ezs')


[CSVString]
separator = fix('\t')
quote = fix('\b')



