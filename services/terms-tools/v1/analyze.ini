[use]
plugin = basics
plugin = analytics
plugin = spawn

[env]
path = voc_loterre
#value = env('vocab').prepend('_annot_').prepend(env('langue')).prepend('/home/schneist/app/terms_tools/terms_tools/dictionary/').append('.jsonl') 
value = env('vocab').prepend('_annot_').prepend(env('langue')).prepend('./dictionary/').append('.jsonl') 

[env]
path = config
#value = env('langue').prepend('/home/schneist/app/terms_tools/terms_tools/dictionary/config/config_annot_').append('.ini')
value = env('langue').prepend('./dictionary/config/config_annot_').append('.ini')

[JSONParse]
separator = *

# return only the 1st object = on ne traite, pour les tests
#[shift]

[exec]
command = terms_tools
#important : mettre ou 2 en prod
concurrency = 1
args = termMatcher
args = fix('-lang')
args = env('langue')
args = fix('-d')
args = env('voc_loterre') 
args = fix('-f')
args = fix('text')
args = fix('-o')
args = fix('json')
args = fix('-ini_file')
args = env('config') 
args = fix('-ezs')

#--------------------  pour recuperer des infos termino complementaires
#[env]
#ex: vocab = P66
#path = url_resolver
#value = env('vocab').prepend('https://loterre-resolvers.services.istex.fr/v1/').append('/identify') 

#[map]
#path = value

#[map/assign]
#path = value.nom_enriched
#value = get('lemma')

#[map/expand]
#path = value.nom_enriched
#size = 100

#[map/expand/URLConnect]
#url = env('url_resolver')
#timeout = 1000
#noerror = true
#--------------------

# Tranformation en flux xml pour widget annotation Loterre

[assign]
path = value
value = get('value').castArray().map( (item) => ({$t: item.text, id:item.id, TermeReconnu: item.text ,"lang": "en"}))

[replace]
path = tag
value = get('value')

[XMLString]
rootElement = result
contentElement = text
prologue = True


