# openAPI Documentation - JSON format (dot notation)
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = path
post.parameters.0.schema.type = string
post.parameters.0.description = The path in each object to enrich with an Python script
post.parameters.1.in = query
post.parameters.1.name = input
post.parameters.1.schema.type = string
post.parameters.1.description = type of entruy : text or terms
post.parameters.2.in = query
post.parameters.2.name = output
post.parameters.2.schema.type = string
post.parameters.2.description = result format [doc] oor [json] or [dico_pos] [dico_annot]
post.parameters.2.schema.enum = [doc, json, dico_pos, dic0_annot]
mimeType = application/json
post.summary = keyword assignation
post.responses.description =  produces pos tag (english)
post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = sqdsqdsqd
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = sdsqdsq

[use]
plugin = basics
plugin = analytics
plugin = spawn


[CSVParse]
separator = fix('\t')
quote = fix('\b')

[CSVObject]

[OBJFlatten]
separator = fix('.')
reverse = true
safe = true

[expand]
path = env('path', 'text')
cache = boost

[expand/exec]
#command should be executable !
command = terms_tools
args = POStagger
args = fix('-lang')
args = fix('fr')
args = fix('-f')
args = env('input')
args = fix('-o')
args = env('output')
args = fix('dico_annot')
args = fix('-ezs')


[CSVString]
separator = fix('\t')
quote = fix('\b')



