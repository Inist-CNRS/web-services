# OpenAPI Documentation - JSON format (dot notation)

post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value.0.firstName = Rubén
post.requestBody.content.application/json.example.0.value.0.lastName = Vázquez-Cárdenas
post.requestBody.content.application/json.example.0.value.0.coAuthors.0 = Juan pablo Martínez-Pastor
post.requestBody.required = true
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = 0000-0002-8416-869X
post.responses.default.description = Return all objects with enrich fields
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.summary = Disambiguation of Orcid author
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = path
post.parameters.0.schema.type = string
post.parameters.0.description = The path in each object to enrich with an Python script
post.parameters.1.in = query
post.parameters.1.name = indent
post.parameters.1.schema.type = boolean
post.parameters.1.description = Indent or not the JSON Result

post.parameters.2.in = query
post.parameters.2.name = nameDepth
post.parameters.2.schema.type = int
post.parameters.2.description = Maximum number of people to check

post.parameters.3.in = query
post.parameters.3.name = worksDepth
post.parameters.3.schema.type = int
post.parameters.3.description = Maximum number of works we take for a person

[use]
plugin = @ezs/spawn
plugin = @ezs/basics
plugin = @ezs/storage
plugin = @ezs/analytics

[JSONParse]
separator = *

[expand]
path = env('path', 'value')
size = 100
# in production mode, uncomment the following line
# cache = boost

[expand/exec]
# command should be executable !
command = ./v1/orcid-disambiguation/orcidDisambiguation.py
args = fix('-p')
args = env('nameDepth',20)
args = fix('-q')
args = env('worksDepth',20)
#command = ./expand.py

[dump]
indent = env('indent', false)
