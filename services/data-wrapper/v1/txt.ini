# Entrypoint output format
mimeType = application/gzip
extension = tar.gz

# OpenAPI Documentation - JSON format (dot notation)
post.operationId = post-v1-txt
post.summary = Transformation d'un fichier texte en fichier corpus
#'
post.description = Le fichier est transformé en fichier corpus exploitable par un web service asynchrone
post.tags.0 = data-wrapper
post.requestBody.content.text/plain.schema.type = string
post.requestBody.content.text/plain.schema.format = binary
post.requestBody.required = true
post.responses.default.description = Fichier corpus au format tar.gz
post.responses.default.content.application/gzip.schema.type = string
post.responses.default.content.application/gzip.schema.format = binary
post.parameters.0.description = Identifiant à utiliser pour le document
post.parameters.0.in = query
post.parameters.0.name = id
post.parameters.0.schema.type = string
post.parameters.0.schema.default = text
post.parameters.0.required = false

[use]
plugin = basics

[TXTConcat]

[replace]
path = id
value = env('id', 'text')
path = value
value = self()

[singleton]
[singleton/validate]
path = value
rule = required

[TARDump]
compress = true
manifest = fix({version: '1'})
manifest = fix({generator: 'v1/txt'})
manifest = fix({parameters: _.omit(_.env(), 'headers')})
manifest = fix({hostAgent: _.get(_.env(), 'headers.host')})
manifest = fix({userAgent: _.get(_.env(), 'headers.user-agent')})
