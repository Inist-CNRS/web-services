# Entrypoint output format
mimeType = application/gzip
extension = tar.gz

# OpenAPI Documentation - JSON format (dot notation)
post.operationId = post-v1-tar-txt2json
post.summary = Transforme un fichier `.tar.gz` contenant des fichiers `.txt` en fichier corpus
post.description = Le fichier est transformé en fichier corpus exploitable par un web service asynchrone, chaque document `.txt` est préalablement transformé en JSON
# Let's fix colorization
post.tags.0 = data-wrapper
post.requestBody.content.application/gzip.schema.type = string
post.requestBody.content.application/gzip.schema.format = binary
post.requestBody.content.application/x-tar.schema.type = string
post.requestBody.content.application/x-tar.schema.format = binary
post.requestBody.required = true
post.responses.default.description = Fichier corpus au format tar.gz
post.responses.default.content.application/gzip.schema.type = string
post.responses.default.content.application/gzip.schema.format = binary

[use]
plugin = basics

[TARExtract]
path = **/*.txt
compress = true
json = false

[replace]
path = id
value = get('id').replace(".txt", ".json")

path = value
value = get('value')

[TARDump]
compress = true
manifest = fix({version: '1'})
manifest = fix({generator: 'v1/tar-txt2json'})
