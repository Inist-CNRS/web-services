# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-tools-normalize
post.summary = Normalisation des termes d'un texte
post.description = Mise en majuscules non accentuées sans caractères spéciaux des termes d'un texte
post.requestBody.required = true
post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = café !
post.requestBody.content.application/json.example.1.id = 2
post.requestBody.content.application/json.example.1.value = Côte d'Ivoire
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = CAFE
post.responses.default.content.application/json.example.1.id = 2
post.responses.default.content.application/json.example.1.value = COTE D IVOIRE
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Les termes sont mis en majuscules non accentuées sans caractères spéciaux
post.tags.0: terms-extraction
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean

[use]
plugin = @ezs/basics

[JSONParse]
separator = *

[assign]
path = value
value = get('value').deburr().replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/\s]+/g, ' ').trim().upperCase()

[dump]
indent = env('indent', false)
