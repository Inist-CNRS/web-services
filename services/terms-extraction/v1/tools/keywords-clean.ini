# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-tools-keywords-clean
post.summary = Tente une homogénisation empirique de mot-clés
post.description = Les mot-clés  sont mis au singulier (empiriquement), sans caractères spéciaux et commencent par une majuscule
post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = sucres
post.requestBody.content.application/json.example.1.id = 2
post.requestBody.content.application/json.example.1.value = arbres
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.requestBody.required = true
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = Sucre
post.responses.default.content.application/json.example.1.id = 2
post.responses.default.content.application/json.example.1.value = Arbres
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Les mot-clés  sont mis au singulier (empiriquement), sans caractères spéciaux et commencent par une majuscule
post.tags.0: terms-extraction
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean

[use]
plugin = @ezs/basics

[JSONParse]
separator = *

[assign]
path = value
value = get('value').replace(/[`~!@#$%^&*()_|+\-=?;:",.<>\{\}\[\]\\\/\s]+/g, ' ').trim()

[TXTInflection]
path = value
transform = singularize
transform = humanize

[dump]
indent = env('indent', false)
