# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-tools-sentences
post.summary = Découpage d'un texte en phrases
post.description = Prend un texte en retroune un tableau avec pour chaque item une phrase
post.requestBody.required = true
post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = Bonjour. Comment ça va ?
post.requestBody.content.application/json.example.1.id = 2
post.requestBody.content.application/json.example.1.value = Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et metus rhoncus sem ultricies semper. Donec luctus magna vitae mi malesuada, eget tristique turpis mattis.
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value.0 = Bonjour.
post.responses.default.content.application/json.example.0.value.1 = Comment ça va ?
post.responses.default.content.application/json.example.1.id = 2
post.responses.default.content.application/json.example.1.value.0 = Lorem ipsum dolor sit amet, consectetur adipiscing elit.
post.responses.default.content.application/json.example.1.value.1 = Donec et metus rhoncus sem ultricies semper.
post.responses.default.content.application/json.example.1.value.2 = Donec luctus magna vitae mi malesuada, eget tristique turpis mattis.
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Les phrases sont juste découpées, les caractères ne sont pas modifiés.
post.tags.0 = terms-extraction
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean

[use]
plugin = @ezs/basics
plugin = @ezs/strings

[JSONParse]
separator = *

[sentences]
path = value

[dump]
indent = env('indent', false)
