# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v2-teeft-en
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.requestBody.required = true
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Termes extraits du texte envoyé
post.summary = Extrait des termes du texte en anglais en utilisant Teeft
post.description = Renvoie les termes les plus spécifiques d'un texte en anglais, avec leurs fréquence et spécificité.  ^MPermet d’avoir une idée de ce dont parle le texte. Idéalement, le texte doit contenir plusieurs paragraphes.^M^MPar défaut `teeft` extrait 5 termes, sauf si la variable `nb` est utilisée.^M^M### Bibliographie^M^MCuxac P., Kieffer N., Lamirel J.C. : *SKEEFT: indexing method taking into account the structure of the document*. 20th Collnet meeting, 5-8 Nov 2019, Dalian, China.
# Let's keep colorization right
post.tags.0: terms-extraction
post.parameters.0.description = Nombre maximal de termes à récupérer
post.parameters.0.in = query
post.parameters.0.name = nb
post.parameters.0.required = false
post.parameters.0.schema.type = number
post.parameters.1.description = Indenter le JSON résultant
post.parameters.1.in = query
post.parameters.1.name = indent
post.parameters.0.required = false
post.parameters.1.schema.type = boolean

# Examples
post.requestBody.content.application/json.example.0.value = Perseverance, nicknamed Percy, is a car-sized Mars rover designed to explore the crater Jezero on Mars as part of NASA's Mars 2020 mission. It was manufactured by the Jet Propulsion Laboratory and launched on 30 July 2020, at 11:50 UTC. Confirmation that the rover successfully landed on Mars was received on 18 February 2021, at 20:55 UTC. As of 16 December 2021, Perseverance has been active on Mars for 293 sols (301 Earth days) since its landing. Following the rover's arrival, NASA named the landing site Octavia E. Butler Landing. Perseverance has a similar design to its predecessor rover, Curiosity, from which it was moderately upgraded. It carries seven primary payload instruments, nineteen cameras, and two microphones. The rover also carried the mini-helicopter Ingenuity to Mars, an experimental aircraft and technology showcase that made the first powered flight on another planet on 19 April 2021. Since its first flight, Ingenuity has made 14 more flights for a total of 15 powered flights on another planet. The rover's goals include identifying ancient Martian environments capable of supporting life, seeking out evidence of former microbial life existing in those environments, collecting rock and soil samples to store on the Martian surface, and testing oxygen production from the Martian atmosphere to prepare for future crewed missions. The Perseverance rover has four main science objectives[20] that support the Mars Exploration Program's science goals: Looking for habitability: identify past environments that were capable of supporting microbial life. Seeking biosignatures: seek signs of possible past microbial life in those habitable environments, particularly in specific rock types known to preserve signs over time. Caching samples: collect core rock and regolith ("soil") samples and store them on the Martian surface. Preparing for humans: test oxygen production from the Martian atmosphere. In the first science campaign Perseverance performs an arching drive southward from its landing site to the Séítah unit to perform a "toe dip" into the unit to collect remote-sensing measurements of geologic targets. After that it will return to the Crater Floor Fractured Rough to collect the first core sample there. Passing by the Octavia B. Butler landing site concludes the first science campaign. The second campaign will include several months of travel towards the "Three Forks" where Perseverance can access geologic locations at the base of the ancient delta of Neretva river, as well as ascend the delta by driving up a valley wall to the northwest.
post.requestBody.content.application/json.example.0.id = https://en.wikipedia.org/wiki/Perseverance_(rover)
post.requestBody.content.application/json.example.1.value = Text mining, also referred to as text data mining, similar to text analytics, is the process of deriving high-quality information from text. It involves "the discovery by computer of new, previously unknown information, by automatically extracting information from different written resources." Written resources may include websites, books, emails, reviews, and articles. High-quality information is typically obtained by devising patterns and trends by means such as statistical pattern learning. According to Hotho et al. (2005) we can differ three different perspectives of text mining: information extraction, data mining, and a KDD (Knowledge Discovery in Databases) process. Text mining usually involves the process of structuring the input text (usually parsing, along with the addition of some derived linguistic features and the removal of others, and subsequent insertion into a database), deriving patterns within the structured data, and finally evaluation and interpretation of the output. 'High quality' in text mining usually refers to some combination of relevance, novelty, and interest. Typical text mining tasks include text categorization, text clustering, concept/entity extraction, production of granular taxonomies, sentiment analysis, document summarization, and entity relation modeling (i.e., learning relations between named entities). Text analysis involves information retrieval, lexical analysis to study word frequency distributions, pattern recognition, tagging/annotation, information extraction, data mining techniques including link and association analysis, visualization, and predictive analytics. The overarching goal is, essentially, to turn text into data for analysis, via application of natural language processing (NLP), different types of algorithms and analytical methods. An important phase of this process is the interpretation of the gathered information. A typical application is to scan a set of documents written in a natural language and either model the document set for predictive classification purposes or populate a database or search index with the information extracted. The document is the basic element while starting with text mining. Here, we define a document as a unit of textual data, which normally exists in many types of collections. The term text analytics describes a set of linguistic, statistical, and machine learning techniques that model and structure the information content of textual sources for business intelligence, exploratory data analysis, research, or investigation. The term is roughly synonymous with text mining; indeed, Ronen Feldman modified a 2000 description of "text mining" in 2004 to describe "text analytics". The latter term is now used more frequently in business settings while "text mining" is used in some of the earliest application areas, dating to the 1980s, notably life-sciences research and government intelligence.
post.requestBody.content.application/json.example.1.id = https://en.wikipedia.org/wiki/Text_mining

post.responses.default.content.application/json.example.0.id = https://en.wikipedia.org/wiki/Perseverance_(rover)
post.responses.default.content.application/json.example.0.value.0.term = perseverance
post.responses.default.content.application/json.example.0.value.0.frequency = 6
post.responses.default.content.application/json.example.0.value.0.specificity = 1
post.responses.default.content.application/json.example.0.value.1.term = martian surface
post.responses.default.content.application/json.example.0.value.1.frequency = 2
post.responses.default.content.application/json.example.0.value.1.specificity = 0.7063
post.responses.default.content.application/json.example.0.value.2.term = martian atmosphere
post.responses.default.content.application/json.example.0.value.2.frequency = 2
post.responses.default.content.application/json.example.0.value.2.specificity = 0.7063
post.responses.default.content.application/json.example.0.value.3.term = crater jezero
post.responses.default.content.application/json.example.0.value.3.frequency = 1
post.responses.default.content.application/json.example.0.value.3.specificity = 0.3532
post.responses.default.content.application/json.example.0.value.4.term = jet propulsion laboratory
post.responses.default.content.application/json.example.0.value.4.frequency = 1
post.responses.default.content.application/json.example.0.value.4.specificity = 0.3532
post.responses.default.content.application/json.example.1.id = https://en.wikipedia.org/wiki/Text_mining
post.responses.default.content.application/json.example.1.value.0.term = analytics
post.responses.default.content.application/json.example.1.value.0.frequency = 4
post.responses.default.content.application/json.example.1.value.0.specificity = 1
post.responses.default.content.application/json.example.1.value.1.term = text analytics
post.responses.default.content.application/json.example.1.value.1.frequency = 2
post.responses.default.content.application/json.example.1.value.1.specificity = 0.5
post.responses.default.content.application/json.example.1.value.2.term = high-quality information
post.responses.default.content.application/json.example.1.value.2.frequency = 2
post.responses.default.content.application/json.example.1.value.2.specificity = 0.5
post.responses.default.content.application/json.example.1.value.3.term = natural language
post.responses.default.content.application/json.example.1.value.3.frequency = 2
post.responses.default.content.application/json.example.1.value.3.specificity = 0.5
post.responses.default.content.application/json.example.1.value.4.term = text data
post.responses.default.content.application/json.example.1.value.4.frequency = 1
post.responses.default.content.application/json.example.1.value.4.specificity = 0.25

[use]
plugin = @ezs/basics
plugin = @ezs/teeft

[JSONParse]
separator = *

[replace]
path = content
value = get('value')

path = path
value = get('id', 'n/a')

[TeeftToLowerCase]
path = content

[TeeftSentenceTokenize]
[TeeftTokenize]

[TeeftNaturalTag]
lang = en

[TeeftExtractTerms]
lang = en

[TeeftFilterTags]
lang = en

[TeeftRemoveNumbers]
[TeeftRemoveShortTerms]
[TeeftRemoveLongTerms]
[TeeftRemoveWeirdTerms]
[TeeftStopWords]
lang = en

[TeeftSumUpFrequencies]
[TeeftSpecificity]
lang = en
sort = true

[TeeftFilterMonoFreq]

[replace]
path = id
value = get('path')

path = value
value = get('terms').slice(0, env("nb", 5)).map(t => ({term: t.term, frequency: t.frequency, specificity: Number(t.specificity.toFixed(4))}))

[dump]
indent = env('indent', false)
