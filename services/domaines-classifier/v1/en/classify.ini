# OpenAPI Documentation - JSON format (dot notation)
post.responses.default.description = Return all objects with enrich fields
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.summary = domaines classification web service
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = path
post.parameters.0.schema.type = string
post.parameters.0.description = The path in each object to enrich with an Python script
post.parameters.1.in = query
post.parameters.1.name = indent
post.parameters.1.schema.type = boolean
post.parameters.1.description = Indent or not the JSON Result
post.parameters.2.in = query
post.parameters.2.name = deep
post.parameters.2.schema.type = integer
post.parameters.2.description = profondeur [0...3]

# Example
post.requestBody.content.application/json.example.0.idt = 08-040289
post.requestBody.content.application/json.example.0.value = Planck 2015 results. XIII. Cosmological parameters.We present results based on full-mission Planck observations of temperature and polarization anisotropies of the CMB. These data are consistent with the six-parameter inflationary LCDM cosmology.
 From the Planck temperature and lensing data, for this cosmology we find a Hubble constant, H0= (67.8 +/- 0.9) km/s/Mpc, a matter density parameter Omega_m = 0.308 +/- 0.012 and a scalar spectral index with n_s = 0.968 +/- 0.006. (We quote 68% errors on measured parameters and 95% limits on other parameters.) Combined with Planck temperature and lensing data, Planck LFI polarization measurements lead to a reionization optical depth of tau = 0.066 +/- 0.016. Combining Planck with other astrophysical data we find N_ eff = 3.15 +/- 0.23 for the effective number of relativistic degrees of freedom and the sum of neutrino masses is constrained to < 0.23 eV. Spatial curvature is found to be |Omega_K| < 0.005. For LCDM we find a limit on the tensor-to-scalar ratio of r <0.11 consistent with the B-mode constraints from an analysis of BICEP2, Keck Array, and Planck (BKP) data. Adding the BKP data leads to a tighter constraint of r < 0.09. We find no evidence for isocurvature perturbations or cosmic defects. The equation of state of dark energy is constrained to w = -1.006 +/- 0.045. Standard big bang nucleosynthesis predictions for the Planck LCDM cosmology are in excellent agreement with observations. We investigate annihilating dark matter and deviations from standard recombination, finding no evidence for new physics. The Planck results for base LCDM are in agreement with BAO data and with the JLA SNe sample. However the amplitude of the fluctuations is found to be higher than inferred from rich cluster counts and weak gravitational lensing. Apart from these tensions, the base LCDM cosmology provides an excellent description of the Planck CMB observations and many other astrophysical data sets.                                                                                                                       post.responses.default.content.application/json.example.0.idt = 08-040289
post.responses.default.content.application/json.example.0.value.0.code.id = 001
post.responses.default.content.application/json.example.0.value.0.code.value = Sciences exactes et technologie
post.responses.default.content.application/json.example.0.value.0.confidence = 1.0000077486038208
post.responses.default.content.application/json.example.0.value.0.rang = 1
post.responses.default.content.application/json.example.0.value.1.code.id = 001B
post.responses.default.content.application/json.example.0.value.1.code.value = Physique
post.responses.default.content.application/json.example.0.value.1.confidence = 0.7340989708900452
post.responses.default.content.application/json.example.0.value.1.rang = 2
post.responses.default.content.application/json.example.0.value.2.code.id = 001B00
post.responses.default.content.application/json.example.0.value.2.code.value = Généralités
post.responses.default.content.application/json.example.0.value.2.confidence = 0.9693299531936646
post.responses.default.content.application/json.example.0.value.2.rang = 3

[use]
plugin = @ezs/spawn
plugin = @ezs/basics
plugin = @ezs/storage
plugin = @ezs/analytics

[JSONParse]
separator = *

[expand]
path = value
size = 100
# in production mode, uncomment the following line
# cache = boost

#------------------------  pretraitement nlptools -----------------
#[expand/URLConnect]
#timeout = 100000
#pointe vers dev
#url = http://nlptools-02.tdmservices.intra.inist.fr/v1/en/postagger/analyze?output=doc&param=%7B%22POStagger%22%3A%20%7B%22POS_whitelist%22%3A%5B%22ADJ%22%2C%22NOUN%22%2C%20%22PROPN%22%5D%7D%7D
#pointe vers prod
#url = https://nlp-tools-2.services.inist.fr/v1/en/postagger/analyze?output=doc&param=%7B%22POStagger%22%3A%20%7B%22POS_whitelist%22%3A%5B%22ADJ%22%2C%22NOUN%22%2C%20%22PROPN%22%5D%7D%7D

#------------------------  prediction du code de classement -------
[expand/exec]
#command should be executable !
command = ./classify.py
args = fix('-p')
args = env('deep',3)

[expand/exploding]

# WARNING: [exploding] generates an object {id, value}, where the key value contains the original data
[expand/combine]
path = value.code
primer = ./code-classement.json

[expand/combine/files]

[expand/combine/JSONParse]
separator = *

[expand/combine/replace]
path = id
value = get('code')

path = value
value = get('verbalisation')

[expand/combine/validate]
path = id
rule = required

path = value
rule = required

[expand/aggregate]

#------------------------  prediction du code de classement ----------
[dump]
indent = true
