# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-rnsr-json
post.description = Traitement qui prend un objet JSON content un `id` et une `value` (contenant une année de publication, `year`, et une adresse `address`) et renvoie un `id` et une `value` (un tableau d'identifiants RNSR).
post.tags.0 = rnsr
post.responses.default.description = Return a JSON, composed of `id`, `value`, where value is found `RNSR`(s)
post.responses.default.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.summary = Find RNSR to address given in `value`, when possible
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream

# Examples

post.requestBody.content.application/json.example.0.id: 1
post.requestBody.content.application/json.example.0.value.year: 2021
post.requestBody.content.application/json.example.0.value.address: CNRS UMR AMAP MONTPELLIER FRA
post.requestBody.content.application/json.example.1.id: 2
post.requestBody.content.application/json.example.1.value.year: 2021
post.requestBody.content.application/json.example.1.value.address: IRD UMR AMAP MONTPELLIER FRA
post.requestBody.content.application/json.example.2.id: 3
post.requestBody.content.application/json.example.2.value.year: 2021
post.requestBody.content.application/json.example.2.value.address: University of Bordeaux, IMS, CNRS UMR5218, Talence, F-33405, France
post.requestBody.content.application/json.example.3.id: 4
post.requestBody.content.application/json.example.3.value.year: 2021
post.requestBody.content.application/json.example.3.value.address: CENBG, CNRS/IN2P3, Chemin du Solarium B. P. 120, Gradignan, F-33175, France
post.requestBody.content.application/json.example.4.id: 5
post.requestBody.content.application/json.example.4.value.year: 2021
post.requestBody.content.application/json.example.4.value.address: Nulle part
post.requestBody.content.application/json.example.5.id: 6
post.requestBody.content.application/json.example.5.value.address: Intemporel
post.requestBody.content.application/json.example.6.id: 7
post.requestBody.content.application/json.example.6.value.address: Inist-CNRS, UPS76, 2 rue Jean Zay, Vandoeuvre-lès-Nancy
post.responses.default.content.application/json.example.0.id: 1
post.responses.default.content.application/json.example.0.value.0: 200317641S
post.responses.default.content.application/json.example.1.id: 2
post.responses.default.content.application/json.example.1.value.0: 200317641S
post.responses.default.content.application/json.example.2.id: 3
post.responses.default.content.application/json.example.2.value.0: 200711887V
post.responses.default.content.application/json.example.3.id: 4
post.responses.default.content.application/json.example.3.value: []
post.responses.default.content.application/json.example.4.id: 5
post.responses.default.content.application/json.example.4.value: []
post.responses.default.content.application/json.example.5.id: 6
post.responses.default.content.application/json.example.5.value: []
post.responses.default.content.application/json.example.6.id: 7
post.responses.default.content.application/json.example.6.value.0: 198822446E

# Ajouter une ou deux apostrophes pour corriger la coloration syntaxique: '

[use]
plugin = basics
plugin = conditor

[JSONParse]

[assign]
path = value.year
value = update("value.year", (field) => typeof field === "string" ? field.split("-")[0] : field).get("value.year")

[getRnsr]

[JSONString]
indent = env('indent', true)
