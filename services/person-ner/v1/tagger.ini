# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.summary = Extraction d'entités nommées usuelles - Multilingue
post.description = Permet d'extraire les entités nommées (correspondant à des noms de personnes, des localisations, des organismes, etc) dans du texte
post.responses.default.description = Entités nommées reconnues par catégorie (PER, LOC, ORG, MISC, ...)
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result

# Examples
post.requestBody.content.application/json.example.0.value = Python is widely used in data science. Bob R. uses it ; he works for the CNRS
post.requestBody.content.application/json.example.1.value = Jean Dupont assiste àu festival de Cannes sur la côte d'Azur.
post.responses.default.content.application/json.example.0.value.PER.0 = Bob R.
post.responses.default.content.application/json.example.0.value.LOC = []
post.responses.default.content.application/json.example.0.value.ORG.0 = CNRS
post.responses.default.content.application/json.example.0.value.MISC.0 = Python
post.responses.default.content.application/json.example.1.value.PER.0 = Jean Dupont
post.responses.default.content.application/json.example.1.value.LOC.0 = côte d'Azur
post.responses.default.content.application/json.example.1.value.ORG = []
post.responses.default.content.application/json.example.1.value.MISC.0 = festival de Cannes
;'
[use]
plugin = @ezs/spawn
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 10

[expand/exec]
# command should be executable !
command = ./v1/tagger.py

[dump]
indent = env('indent', false)
