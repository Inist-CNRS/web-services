# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.description = Trouve des entités nommées de Chimie dans un texte
post.responses.default.description = Renvoie un Json composé comportant d'un champs "chemical" et d'un champ "chemical_disambiguisate"
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.summary = Recherche d'entité nommées de Chimie
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result

# Examples

post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = This is three chemical name entity: methanol, 2-propanol, or CO2.
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value.chemical.0 = methanol
post.responses.default.content.application/json.example.0.value.chemical.1 = 2-propanol
post.responses.default.content.application/json.example.0.value.chemical.2 = CO2
post.responses.default.content.application/json.example.0.value.chemical_siambiguisate.0 = methanol
post.responses.default.content.application/json.example.0.value.chemical_siambiguisate.1 = propan-2-ol


[use]
# exec
plugin = @ezs/spawn
# JSONParse
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 100

[expand/exec]
# command should be executable !
command = ./v1/chem/tagger.py

[dump]
indent = env('indent', false)
