# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.operationId = post-v1-pdf2text
post.description = A partir de l url d un fichier PDF, le service extrait le texte contenu
post.summary = à partir d un tableau d objets avec à minima un champ value contenant des url vers des fichiers pdf
post.tags.0 = pdf-tools
post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = https://jamanetwork.com/journals/JAMA/articlepdf/1883019/joi140072.pdf
post.requestBody.content.application/json.example.1.id = 2
post.requestBody.content.application/json.example.1.value = https://biblio.ugent.be/publication/8716283/file/8716284.pdf
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.requestBody.required = true
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = {...}
post.responses.default.content.application/json.example.1.id = 2
post.responses.default.content.application/json.example.1.value = {...}
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.responses.default.description = Le texte brut extrait de chaque ficheir PDF
post.parameters.0.description = Indenter le JSON résultant
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean

[use]
plugin = basics
plugin = spawn

[JSONParse]
separator = *

[expand]
path = value
size = 5
cacheName = pdf2text
 
[expand/exec]
command = ./v1/pdf2text.sh
concurrency = 0

[JSONString]
indent = env('indent')

