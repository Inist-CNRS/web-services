# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.description = Trouve des entités nommées de maladies dans un texte
post.responses.default.description = Renvoie un Json composé comportant un champ `value` correspondant aux entités de maladies trouvées
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.summary = Recherche d'entité nommées de maladies
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result

# Examples

post.requestBody.content.application/json.example.0.id: 1
post.requestBody.content.application/json.example.0.value: They have been used in the prevention and treatment of malaria and autoimmune diseases, including systemic lupus erythematosus and rheumatoid arthritis.
post.responses.default.content.application/json.example.0.id: 1
post.responses.default.content.application/json.example.0.value:
post.responses.default.content.application/json.example.0.value.diseases.0: malaria
post.responses.default.content.application/json.example.0.value.diseases.1: autoimmune diseases
post.responses.default.content.application/json.example.0.value.diseases.2: systemic lupus erythematosus
post.responses.default.content.application/json.example.0.value.diseases.3: rheumatoid arthritis


[use]
# exec
plugin = @ezs/spawn
# JSONParse
plugin = @ezs/basics

[JSONParse]
separator = *

[expand]
path = value
size = 100

[expand/exec]
# command should be executable !
command = ./v1/diseases/tagger.py

[dump]
indent = env('indent', false)
