# OpenAPI Documentation - JSON format (dot notation)
mimeType = application/json

post.summary = text-summarize - Génère un résumé d'un article scientifique écrit en anglais.
post.description = Utilise un modèle de langue pour générer le résumé d'un article scientifique à partir du texte intégral. La nature du modèle ne permet pas de garantir la reproductibilité des résultats. Si le texte est trop long, la fin du document n'est pas prise en compte (ce qui affecte peu les performances globales du modèle). La route doit être choisie en fonction de la langue du document.
post.responses.default.content.application/json.schema.$ref =  #/components/schemas/JSONStream
post.tags.0 = text-summarize
post.requestBody.required = true
post.requestBody.content.application/json.schema.$ref = #/components/schemas/JSONStream
post.parameters.0.in = query
post.parameters.0.name = indent
post.parameters.0.schema.type = boolean
post.parameters.0.description = Indent or not the JSON Result

# Examples

post.requestBody.content.application/json.example.0.id = 1
post.requestBody.content.application/json.example.0.value = Introduction In bibliographic databases, affiliations of authors are of paramount importance. Hence, they permit to the laboratories or institutes to get national and even international visibility, as well as they consequently provide authors with scientific caution. We cannot discuss the issue of affiliations without talking of ''Shanghai ranking'' which aims at evaluating universities. Our purpose here is not to feed up the controversy (Van Raan 2005; ), but to point out that the management of affiliation plays an important role in the calculation of universities ''performance''. reports some problems with author's names and also institutions: ''Authors from the same institution, or even from the same department, may not indicate their institutional affiliations in the same way''. Depending on the country, it is not always clear how to name a laboratory with respect to its supervisory authorities. The affiliation is also important information to disambiguate author names in bibliographic databases. In this context, Wang points out that: ''as the amount of available information increases, problem caused by misspelling, spelling difference, and name or affiliation change also become worse'' ( . A standardization of data in bibliographic databases is thus necessary to carry out informetrics studies, but it is not a trivial task: the practice, whatever it is intentional or not, of omitting institutional affiliations, or giving incomplete or wrong information is not uncommon . Each year, the CNRS (the French National Center of Scientific Research) has to spot its laboratories affiliations among the French ones. Many of them are easy to identify automatically thank to key words extraction but, at the issue of this process, it still remains unidentified affiliations . New methods for disambiguation could help the information analysts to be more efficient when labelling. This paper proposes an approach based on Naive Bayes (NB) learning method and overlapping clustering. It is structured as follows: ''State of the art and discussion'' section summarizes related works and identifies problems. Section 3 describes our approach firstly with supervised learning method and then with semi-supervised method. Next, section 4 reports experiments and results...
post.responses.default.content.application/json.example.0.id = 1
post.responses.default.content.application/json.example.0.value = In bibliographic databases, affiliations of authors are of paramount importance. They permit to the laboratories or institutes to get national and even international visibility. Depending on the country, it is not always clear how to name a laboratory with respect to its supervisory authorities. New methods for disambiguation could help the information analysts to be more efficient when labelling. <AI-generated>


[use]
plugin = @ezs/spawn
plugin = @ezs/basics


[JSONParse]
separator = *

[expand]
path = value
size = 1

[expand/exec]
# command should be executable !
command = ./v1/en.py

[dump]
indent = env('indent', false)
